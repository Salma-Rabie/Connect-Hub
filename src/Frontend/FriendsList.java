/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.FriendRequestClass;
import Backend.FriendRequestDataBase;
import Backend.SuggestedFriends;
import Backend.Suggestions;
import Backend.User;

import java.awt.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author DELL
 */
public class FriendsList extends javax.swing.JFrame {

    /**
     * Creates new form FriendsList
     */
    private User user; // User object passed from NewsFeed
    private JFrame previousWindow; // Reference to the NewsFeed JFrame
    //private HashMap<String, String> usernameToIdMap; // Map usernames to user IDs
    private DefaultTableModel tableModel;

    public FriendsList(JFrame previousWindow, User user) {
        this.previousWindow = previousWindow;
        this.user = user;
        setTitle("My Friends");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        tableModel = new DefaultTableModel(new Object[]{"Username", "Action"}, 0);

        // Add rows to the table model (display usernames)
//        for (String username : usernameToIdMap.keySet()) {
//            tableModel.addRow(new Object[]{username, "Friends"});
//        }
//        
//        for (String friend : friends) {
//            tableModel.addRow(new Object[]{friend, "Remove", "Block"});
//        }
        // Create JTable
        JTable table = new JTable(tableModel) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 1; // Only "Action" column is editable
            }
        };
        JScrollPane scrollPane = new JScrollPane(table);
        getContentPane().add(scrollPane, BorderLayout.CENTER);
        JButton backButton = new JButton("Back");
        backButton.addActionListener(e -> {
            this.dispose(); // Close SuggestionsList
            ((NewsFeed) previousWindow).updateUser(user);
            previousWindow.setVisible(true); // Show NewsFeed
        });
        getContentPane().add(backButton, BorderLayout.SOUTH);

        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
