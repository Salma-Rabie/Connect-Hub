/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.FriendDataBase;
import Backend.FriendRequest;
import Backend.FriendRequestDataBase;
import Backend.User;
import Backend.UserDataBase;
import Backend.UserManager;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author sarar
 */
public class friendRequest extends javax.swing.JFrame {

    /**
     * Creates new form friendRequest
     */
    private User currentUser;
    private FriendRequestDataBase frienddatabase;
    private JFrame previousWindow;
    private ArrayList<String> Requests ;
    private  UserManager userManager;
     List<FriendRequest> result;
     ArrayList<User> all;
     UserDataBase db;
     FriendDataBase friendDb;
    public friendRequest(JFrame previousWindow,User user,FriendRequestDataBase frienddatabase, UserManager userManager) {
        this.previousWindow = previousWindow;
        this.currentUser = user;
        this.frienddatabase = frienddatabase;
        this.userManager=userManager;
         db=userManager.getDatabase();
         this.friendDb = FriendDataBase.getInstance("friends.json");
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Friend Requests for " + user.getUsername());
        setSize(400, 300);

        // Add friend requests to the ComboBox
        // Title
       friends.removeAllItems();
         friends.addItem("Friend Requests");
        friends.setSelectedIndex(0);
        result =frienddatabase.getRequestsReceivedByUserId(user.getUserId());
         all=  db.getAllUsers();
         for (FriendRequest request : result) {
    // Find the user whose ID matches the sender ID in the request
    for (User userInList : all) {
        if (userInList.getUserId().equals(request.getSenderId())) {
            // Add the username to the ComboBox
            friends.addItem(userInList.getUsername());
             
        }
    }
}
        // Set title as default
              // Prevent selection of the title

        // Populate ComboBox with pending requests
       
     
                
    }
 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        friends = new javax.swing.JComboBox<>();
        accept = new javax.swing.JButton();
        decline = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        friends.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        friends.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                friendsActionPerformed(evt);
            }
        });

        accept.setText("accept");
        accept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptActionPerformed(evt);
            }
        });

        decline.setText("decline");
        decline.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                declineActionPerformed(evt);
            }
        });

        back.setText("back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(accept)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 70, Short.MAX_VALUE)
                .addComponent(decline)
                .addGap(53, 53, 53)
                .addComponent(back)
                .addGap(14, 14, 14))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(friends, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(friends, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(accept)
                    .addComponent(decline)
                    .addComponent(back))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void declineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_declineActionPerformed
        // TODO add your handling code here:
        String selectedUserName = (String) friends.getSelectedItem();
    
    // You need to retrieve the actual FriendRequest object for the selected user
    if (selectedUserName != null && !selectedUserName.equals("Select Friend Request")) {
        // Find the corresponding FriendRequest from the list
        for (FriendRequest request : result) {
            if (request.getSenderId()!=null) {
                // Accept the friend request and add the user to the friends list
                frienddatabase.acceptFriendRequest(request.getRequestId());
                // Optionally, update the ComboBox or UI here (e.g., clear the ComboBox or reload it)
                friends.removeItem(selectedUserName);  // Remove from ComboBox
                break;
            }
        }
    } System.out.println("No valid selection or default option selected.");
        
    }//GEN-LAST:event_declineActionPerformed

    private void acceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptActionPerformed
       String selectedUserName = (String) friends.getSelectedItem();
    
    // You need to retrieve the actual FriendRequest object for the selected user
    if (selectedUserName != null && !selectedUserName.equals("Select Friend Request")) {
        // Find the corresponding FriendRequest from the list
        for (FriendRequest request : result) {
            // Assume 'getSenderId()' is a method to retrieve the sender's ID
            if (request.getSenderId()!=null) {
                // Accept the friend request and add the user to the friends list
                frienddatabase.acceptFriendRequest(request.getRequestId());
                // Optionally, update the ComboBox or UI here (e.g., clear the ComboBox or reload it)
                friends.removeItem(selectedUserName);  // Remove from ComboBox
                friendDb.addFriend(currentUser.getUserId(),request.getSenderId() );
                break;
            }
        }
    } System.out.println("No valid selection or default option selected.");
            
    }//GEN-LAST:event_acceptActionPerformed

    private void friendsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_friendsActionPerformed
        // TODO add your handling code here:
        
            
    }//GEN-LAST:event_friendsActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        previousWindow.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(friendRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(friendRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(friendRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(friendRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accept;
    private javax.swing.JButton back;
    private javax.swing.JButton decline;
    private javax.swing.JComboBox<String> friends;
    // End of variables declaration//GEN-END:variables
}
